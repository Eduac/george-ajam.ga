Effective management of API documentation, a systematic literature review







 
1.	INTRODUCTION
APIs (Application Programming Interfaces) are vital in software evolution, exchanging data, functionalities between software components and web services. API documentation are not sufficient when it comes to learning how the API works, it involves going to various resources, and are usually ambiguous [API-DocFails-2015] by not clearly explaining how an invocation works or how a method is used. 
This paper is trying to find which parts of an API documentation is favourable and what it should looks like to enable learning to novice programmers who navigate the documentation. Another aspect is to address gaps in literature by following a methodology of systematic review. The following guiding questions help shape the study and the extraction of information
1-	What are the problems being addressed in the literature? We will look at API - documentation, learnability (e.g. APIs Examples) as part of the usability of the API.
2-	Which online data sources to consider in our study?
3-	What are the methods (API documentation techniques) are being actively used to provide solutions?
4-	Are studies making use of (API documentation which are automatically generated from source code or the manual approach)?
5-	Are studies validating their contributions to API documentation readers? 
6-	What are the major differences between web APIs documentation and programming languages APIs?
We perform a comprehensive search for and evaluation of peer-reviewed studies about the API documentation for the purposes of improving learnability and readability. Our aim is to look at the state-of-the-art techniques and the crowdsourcing activities being used with API documentation. This review will do two main contributions, the first one is to identify gaps in the literature, and the second one is to inform about the implications and issues that relate to API documentations.
2.	METHOD
A Systematic literature review (SLR) attempts to investigate specific research question of a topic in the existing literature, with an objective and clear approach applied to large collection of studies, the research questions draws answers from synthesis of the literature. 





Table 1. Search Terms Combination used in SLR study
 



Guidelines are followed from two main references [Kitchenham 2007] and [Okoli 2010] for SLR with focus on Software engineering and Information systems respectively. Findings will follow the steps of thematic analysis [Cruzes 2011], to gain top-down levels of recurring themes of research areas from the studies.

2.1. Search Procedure
The search process carried on two phases, the first phase carried between [Dec 2015- Feb 2016], targeted three key databases: IEEExplore [IEEE 2015], The ACM Digital Library [ACM 2015], Google Scholar Web Search Engine [Scholar 2015]. In each database, 30 queries were carried out based on the terms specified in table 1.
The second phase handled manual search for key journals in computer science, in addition to the journals, snowballing research works from existing papers references were also included and also suggested papers by experts.
The total number of resulting papers is 972 unique results refined from 79 duplicates. Both title and abstract of each result were examined by reviewers and classified as either included or excluded from the study. The exclusion criterion is any study that doesn’t include an explicit or implicit link to APIs, libraries or Software documentation and their related knowledge areas. Research attempts to improve code search or comprehension without relation or links to APIs/Software documentation were also excluded from results.
The following questions formed the inclusion criteria’s:
(1)	Does the study include explicit or implicit link to APIs, libraries or software documentation?
(2)	Does the study have an application in API documentation or any investigation on its issues or learnability?
(3)	Does the study have an automated documentation or human-assisted processing for generating API documentation?
Screening process then followed by gathering all references of the retained 186 included papers.

Table 2. Databases of search and Journals with inclusion numbers of included papers
 #	Search	Total Records	# of yes
1	IEEE Xplore Digital Library	264	110
2	ACM Digital Library	216	81
3	Google Scholar Web Search Engine	234	46
4	Manual & Snowballing	67	15
5	Journal of Computer Science and Technology	49	2
6	Journal of Empirical Software Engineering	88	9
7	Journal of Systems and Software	121	2
8	Computer Support Cooperative Work	12	0
Totals	1051	265
Duplicates	79
Final Included papers	186

2.2. Analysis Procedure
As explained in the search process, the resulted papers included are 186 study, it is important to note that non-English studies were discarded, as some of them had only an abstract in English while the full text was only available in another language. We obtained for each retained study the full text with citation information. The first step in the analysis was preparing a data extraction form. We adapted from [Petticrew 2008], and our form is available online [goo.gl/Bn3nDv]. The form mainly asks the following questions:
(1)	What is (are) the problem[s] being considered?
(2)	What is the objective of the study?
(3)	What is (are) the methodology(ies) conducted in the study?
(4)	What is (are) the reported result(s) by the study?
All examination was carried out by the same examiner, making use of the questions defined in the data extraction form to create a database of the analysis. The database included more questions broadly defined in the preliminary stages and refined later.
Finally, a qualitative research methodology used to analyse the studies and provide a thematic network among them. Guidelines of performing thematic analysis [Cruzes 2011] allowed studies to be reported in themes rather than groups of similar works. The model of the high-order themes was assessed to ensure its generalization, uniqueness and trustworthiness based on the synthesis.
The discovery of the high-order themes included several iteration leading to changes according to the codes of the content analysed from the studies. The authors discussed the changes to insure they are representative.
2.3. Limitations

















3.	RESULTS
Four main themes are identified from the retained studies: Documentation improvement, Documentation production, Documentation problems and Providing knowledge. Those main organizing themes are given below in figure (1), while their corresponding themes are given in more details in the following sections.
 
Figure 1: Main themes of the development of API Documentation research.

3-1	The first main theme is Documentation improvement, consisted of research attempted at enhancing API documentation content, format, policies and concepts. There are four themes, shown in figure (2), represent areas of intended improvements: Rules, Conceptual knowledge, Contributions and Structure/Format characteristics. Contributions theme has three basic themes: Evaluation and Quality, and Content Development, their corresponding research codes shown in figure (2-3). While Structure/Format characteristics basic themes are: Presentation, Specification and Semantic documentation, shown in figure (2-4), together, they represent Documentation improvement themes and retained research studies codes. 
 
Figure 2: Documentation improvement main themes.

 
Figure 2-1: Documentation improvement – Rules, research codes.


 
Figure 2-2: Documentation improvement – Conceptual Knowledge research codes.

 
Figure 2-3: Documentation improvement – Contributions basic themes and research codes.

 
Figure 2-4: Documentation improvement – Structure and format characteristics basic themes and research codes.


3-2	The second main theme is Documentation production. Research community efforts varied from attempts to support locating proper information, coordinating human roles, and tools for producing API documentation. The organizing themes are: Navigation and Search, Management and planning, and tools. See figure (3) for retained research codes involved in each theme.
 
Figure 3: Documentation production including basic themes with research work codes.
3-3	The third main theme is documentation problems. Because documentation of APIs has often issues, research studies approached those issues by identifying errors or problematic areas given in two themes: Detection and Extraction, Detection of errors identified two basic themes, detecting constraints and finding inconsistencies, see figure (4) for corresponding research codes.
 

Figure 4: Documentation problems including basic themes and research work codes.

3-4	The final main theme is providing knowledge. API documents often oversight major parts. Parts which might be considered as important by developers and users. Those parts may indicate for example, a need for code examples or patterns of usage that help understanding an API method. Research studies gave more attention to usage. The organizing themes are: Recommendation, Study of Practices, Usage and Association/ Confederation. Recommendation includes three basic themes: Code, Descriptions and other. Study of Practices has two basic themes: User experience and Development, while Usage represents two themes: Examples and Patterns, main themes are shown in figure (5), followed by basic themes with research codes for each main theme for more clarity in figure (5-1, 5-2, 5-3).
 
Figure 5: Main themes of Documentation problems along with main relevant codes for each retained study.
 
Figure (5-1): Providing knowledge / Recommendation basic themes and relevant codes for each retained study.

 
Figure (5-2): Providing knowledge / Study of Practices basic themes and relevant codes

 
Figure (5-3): Providing knowledge / Usage basic themes and relevant codes

 
Figure (5-4): Providing knowledge: Association / confederation relevant codes


4.	ANALYSIS
5.	DISCUSSION
6.	REFERENCES
[Petticrew 2008] Mark Petticrew, Helen Roberts. “Systematic Reviews in the social sciences: A practice Guide”, Wiley Online Library Book, DOI: 10.1002/978047754887., Appendix 4.
[Cruzes 2011] Cruzes, Daniela S., and Tore Dyba. "Recommended steps for thematic synthesis in software engineering." 2011 International Symposium on Empirical Software Engineering and Measurement. IEEE, 2011. http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6092576
 
